import { earclip } from '../src';

import { expect, test } from 'bun:test';

test('empty', () => {
  expect(earclip([])).toEqual({
    vertices: [],
    indices: [],
  });
});

test('simple', () => {
  expect(
    earclip([
      [
        [0, 0, 0],
        [1, 0, 0],
        [0, 1, 0],
      ],
    ]),
  ).toEqual({
    vertices: [0, 0, 0, 1, 0, 0, 0, 1, 0],
    indices: [1, 2, 0],
  });
});

test('flat points', () => {
  const geometry = [
    [
      [3506, -2048],
      [7464, 402],
      [-2048, 2685],
      [-2048, -2048],
      [3506, -2048],
    ],
    [
      [-2048, -37],
      [1235, 747],
      [338, -1464],
      [-116, -1188],
      [-2048, -381],
      [-2048, -37],
    ],
    [
      [-1491, -1981],
      [-1300, -1800],
      [-1155, -1981],
      [-1491, -1981],
    ],
  ];
  expect(earclip(geometry)).toEqual({
    vertices: [
      3506, -2048, 7464, 402, -2048, 2685, -2048, -2048, 3506, -2048, -2048, -37, 1235, 747, 338,
      -1464, -116, -1188, -2048, -381, -2048, -37, -1491, -1981, -1300, -1800, -1155, -1981, -1491,
      -1981,
    ],
    indices: [
      2, 5, 6, 7, 8, 9, 9, 3, 11, 13, 11, 3, 1, 2, 6, 9, 11, 12, 13, 3, 0, 0, 1, 6, 7, 9, 12, 12,
      13, 0, 0, 6, 7, 7, 12, 0,
    ],
  });
});

test('object points', () => {
  const geometry = [
    [
      { x: 3506, y: -2048 },
      { x: 7464, y: 402 },
      { x: -2048, y: 2685 },
      { x: -2048, y: -2048 },
      { x: 3506, y: -2048 },
    ],
    [
      { x: -2048, y: -37 },
      { x: 1235, y: 747 },
      { x: 338, y: -1464 },
      { x: -116, y: -1188 },
      { x: -2048, y: -381 },
      { x: -2048, y: -37 },
    ],
    [
      { x: -1491, y: -1981 },
      { x: -1300, y: -1800 },
      { x: -1155, y: -1981 },
      { x: -1491, y: -1981 },
    ],
  ];
  expect(earclip(geometry)).toEqual({
    vertices: [
      3506, -2048, 7464, 402, -2048, 2685, -2048, -2048, 3506, -2048, -2048, -37, 1235, 747, 338,
      -1464, -116, -1188, -2048, -381, -2048, -37, -1491, -1981, -1300, -1800, -1155, -1981, -1491,
      -1981,
    ],
    indices: [
      2, 5, 6, 7, 8, 9, 9, 3, 11, 13, 11, 3, 1, 2, 6, 9, 11, 12, 13, 3, 0, 0, 1, 6, 7, 9, 12, 12,
      13, 0, 0, 6, 7, 7, 12, 0,
    ],
  });
});

test('tesselate', () => {
  const geometry = [
    [
      { x: 3506, y: -2048 },
      { x: 7464, y: 402 },
      { x: -2048, y: 2685 },
      { x: -2048, y: -2048 },
      { x: 3506, y: -2048 },
    ],
    [
      { x: -2048, y: -37 },
      { x: 1235, y: 747 },
      { x: 338, y: -1464 },
      { x: -116, y: -1188 },
      { x: -2048, y: -381 },
      { x: -2048, y: -37 },
    ],
    [
      { x: -1491, y: -1981 },
      { x: -1300, y: -1800 },
      { x: -1155, y: -1981 },
      { x: -1491, y: -1981 },
    ],
  ];
  expect(earclip(geometry, 2048)).toEqual({
    indices: [
      15, 51, 50, 18, 8, 9, 9, 3, 11, 13, 11, 3, 24, 53, 6, 9, 11, 12, 29, 13, 3, 56, 34, 36, 12,
      37, 9, 13, 42, 12, 58, 7, 44, 48, 7, 45, 6, 15, 16, 60, 16, 15, 7, 17, 18, 18, 17, 8, 1, 19,
      20, 20, 19, 21, 21, 19, 22, 21, 22, 23, 23, 22, 24, 23, 24, 6, 62, 26, 2, 64, 25, 6, 0, 27,
      28, 28, 27, 29, 29, 27, 30, 29, 30, 13, 66, 1, 31, 32, 67, 33, 70, 31, 34, 33, 71, 0, 74, 36,
      6, 76, 35, 0, 7, 37, 38, 38, 37, 12, 0, 39, 40, 40, 39, 41, 41, 39, 42, 41, 42, 13, 0, 43, 44,
      43, 77, 44, 12, 45, 46, 46, 45, 7, 0, 47, 48, 48, 47, 7, 5, 49, 50, 50, 49, 15, 2, 51, 52, 52,
      51, 15, 26, 53, 54, 54, 53, 24, 0, 55, 56, 55, 79, 56, 6, 57, 58, 58, 57, 7, 5, 59, 60, 60,
      59, 16, 25, 61, 62, 62, 61, 26, 26, 63, 64, 64, 63, 25, 32, 65, 66, 66, 65, 1, 31, 67, 68, 68,
      67, 32, 33, 69, 70, 70, 69, 31, 34, 71, 72, 71, 81, 72, 35, 73, 74, 74, 73, 36, 36, 75, 76,
      76, 75, 35, 6, 77, 78, 78, 77, 43, 34, 79, 80, 80, 79, 55, 33, 81, 82, 82, 81, 71,
    ],
    vertices: [
      3506, -2048, 7464, 402, -2048, 2685, -2048, -2048, 3506, -2048, -2048, -37, 1235, 747, 338,
      -1464, -116, -1188, -2048, -381, -2048, -37, -1491, -1981, -1300, -1800, -1155, -1981, -1491,
      -1981, 0, 1476.0374657325617, 0, 452.07462686567163, 0, -1258.5198237885463, 0,
      -1310.58256496228, 6144, 718.8166526492851, 6144, 475.1096484186868, 4096, 588.5403756622251,
      4096, 1210.362489486964, 2048, 701.9711029057634, 2048, 1701.9083263246425, 0,
      1476.0374657325617, 0, 2193.4541631623215, 2048, -2027.041836515769, 2048, -2048, 0, -2048, 0,
      -1997.6026603733105, 6144, 475.1096484186868, 6144, -415.0793329964629, 4096,
      -1682.7902981303687, 4096, 588.5403756622251, 2048, -253.58784676354026, 2048,
      701.9711029057634, 0, -1310.58256496228, 0, -1533.3333333333333, 2048, -1972.7640449438202,
      2048, -2027.041836515769, 0, -1997.6026603733105, 0, -1867.082813150229, 2048,
      -253.58784676354026, 2048, -1779.2272727272727, 0, -1867.082813150229, 0, -1533.3333333333333,
      2048, -1779.2272727272727, 2048, -1972.7640449438202, -1997.9179619036652, 0, -2048, 0, -2048,
      2048, -968.9127966976264, 2048, 124.19051780578839, 2048, 606.027157249234, 2048,
      3964.2975520321793, 0, 2420.1762264902154, 0, 931.9430122116689, 0, 1475.402360688774, 0,
      -1893.0625, 0, -1997.9179619036652, 0, 0, 2048, -968.9127966976264, 2048, 0, 2048,
      124.19051780578839, 2048, 6814.564897959183, 0, 6144, 0, 5693.087268148115,
      -1.1368683772161603e-13, 6144, -1.1368683772161603e-13, 5693.087268148115, 0, 4096, 0,
      3964.2975520321793, 1.1368683772161603e-13, 4096, 1.1368683772161603e-13, 2048, 0,
      1841.9542039355993, 0, 2048, -1.1368683772161603e-13, 2420.1762264902154,
      -1.1368683772161603e-13, 1475.402360688774, 0, 1841.9542039355993, 0, 2420.176226490216,
      1.1368683772161603e-13, 3964.2975520321793, 1.1368683772161603e-13, 4096, 0,
      3964.2975520321793, 0,
    ],
  });
});
